apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.apollographql.apollo'

def fcProps = new Properties()
fcProps.load(new FileInputStream(rootProject.file('factibly.properties')))

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId 'com.factibly.factibly'
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        manifestPlaceholders = [rollbarAccessToken: fcProps['ROLLBAR_ACCESS_TOKEN']]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    'room.schemaLocation': "$projectDir/db/schemas".toString(),
                    'room.incremental': 'true'
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"
    productFlavors {
        development {
            dimension "env"
            versionNameSuffix "-dev"
            buildConfigField "String", "graphql_base_url", (fcProps["DEV_GRAPHQL_BASE_URL"] ?: "")
            buildConfigField "String", "factibly_base_url", (fcProps["DEV_FACTIBLY_BASE_URL"] ?: "")
        }
        production {
            dimension "env"
            versionNameSuffix ""
            buildConfigField "String", "graphql_base_url", (fcProps["PROD_GRAPHQL_BASE_URL"] ?: "")
            buildConfigField "String", "factibly_base_url", (fcProps["PROD_FACTIBLY_BASE_URL"] ?: "")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding true
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'androidx.core:core-ktx:1.6.0-alpha02'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.activity:activity-ktx:1.2.2'
    implementation 'androidx.fragment:fragment-ktx:1.3.3'
    implementation 'androidx.annotation:annotation:1.2.0'

    def lifecycle_version = '2.3.1'
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    def nav_version = '2.3.5'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    implementation 'androidx.preference:preference-ktx:1.1.1'

    implementation 'com.google.android.material:material:1.4.0-alpha02'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'me.zhanghai.android.materialratingbar:library:1.4.0'

    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$apollo_version"
    implementation "com.apollographql.apollo:apollo-normalized-cache-sqlite:$apollo_version"

    def room_version = '2.3.0'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-guava:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    def ok_http_version = '5.0.0-alpha.2'
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$ok_http_version"

    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'

    implementation 'com.google.firebase:firebase-config-ktx:20.0.4'
    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.3'

    def rollbar_version = '1.7.6'
    implementation "com.rollbar:rollbar-java:$rollbar_version"
    implementation "com.rollbar:rollbar-android:$rollbar_version@aar"

    implementation 'com.jakewharton.timber:timber:4.7.1'

    def datastore_version = '1.0.0-beta01'
    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.datastore:datastore-core:$datastore_version"
}

apollo {
    schemaFile = file("$projectDir/graphql/com/factibly/schema.json")
    rootPackageName = 'com.factibly.factibly' // resolves import issues with the Dagger processor
    generateKotlinModels.set(true)
    customTypeMapping = [
        'Date': 'java.util.Date'
    ]
}

tasks.register('downloadSchema', com.apollographql.apollo.gradle.internal.ApolloDownloadSchemaTask) {
    endpoint = 'http://localhost:8000/graphql'
    schemaRelativeToProject = "$projectDir/graphql/com/factibly/schema.json"
}
